name: CI/CD Java + Podman Compose + LocalStack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: impostocalc
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and run unit tests with Maven
        run: mvn clean test

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: impostoCalc-jar
          path: target/impostoCalc-0.0.1-SNAPSHOT.jar

  build-deploy:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: impostoCalc-jar
          path: target

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Build container image (Podman)
        run: |
          podman build -t impostocalc:latest .

      - name: Run Podman Compose (LocalStack + DB + App)
        run: |
          pip install podman-compose
          podman-compose -f podman-compose.yml up -d
          sleep 30
          podman-compose -f podman-compose.yml ps

      # (Opcional) Teste de healthcheck da aplicação
      - name: Check app health
        run: |
          curl --fail http://localhost:8081/swagger-ui || exit 1

      # (Opcional) Notificações por email
      # - name: Send notification (success)
      #   if: success()
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: ${{ secrets.SMTP_SERVER }}
      #     server_port: ${{ secrets.SMTP_PORT }}
      #     username: ${{ secrets.EMAIL_FROM }}
      #     password: ${{ secrets.EMAIL_PASSWORD }}
      #     subject: "Deploy succeeded"
      #     to: ${{ secrets.EMAIL_TO }}
      #     from: ${{ secrets.EMAIL_FROM }}
      #     body: "O deploy do impostoCalc foi realizado com sucesso!"

      # - name: Send notification (failure)
      #   if: failure()
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: ${{ secrets.SMTP_SERVER }}
      #     server_port: ${{ secrets.SMTP_PORT }}
      #     username: ${{ secrets.EMAIL_FROM }}
      #     password: ${{ secrets.EMAIL_PASSWORD }}
      #     subject: "Deploy failed"
      #     to: ${{ secrets.EMAIL_TO }}
      #     from: ${{ secrets.EMAIL_FROM }}
      #     body: "O deploy do impostoCalc falhou. Verifique o pipeline."

